{"ast":null,"code":"import { HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nexport class AddtokenInterceptor {\n  constructor() {}\n  intercept(request, next) {\n    const token = localStorage.getItem('token');\n    if (token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    }\n    return next.handle(request);\n  }\n  static #_ = this.ɵfac = function AddtokenInterceptor_Factory(t) {\n    return new (t || AddtokenInterceptor)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AddtokenInterceptor,\n    factory: AddtokenInterceptor.ɵfac\n  });\n}","map":{"version":3,"mappings":"AACA,SACEA,WAAW,EACXC,WAAW,EACXC,SAAS,QAEJ,sBAAsB;;AAI7B,OAAM,MAAOC,mBAAmB;EAE9BC,eAAe;EAEfC,SAAS,CAACC,OAA6B,EAAEC,IAAiB;IAC5D,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAIF,KAAK,EAAE;MACTF,OAAO,GAAGA,OAAO,CAACK,KAAK,CAAC;QAAEC,UAAU,EAAE;UAAEC,aAAa,EAAE,UAAUL,KAAK;QAAE;MAAE,CAAC,CAAC;;IAG1E,OAAOD,IAAI,CAACO,MAAM,CAACR,OAAO,CAAC;EAC7B;EAAC;qBAZUH,mBAAmB;EAAA;EAAA;WAAnBA,mBAAmB;IAAAY,SAAnBZ,mBAAmB;EAAA","names":["HttpRequest","HttpHandler","HttpEvent","AddtokenInterceptor","constructor","intercept","request","next","token","localStorage","getItem","clone","setHeaders","Authorization","handle","factory"],"sourceRoot":"","sources":["C:\\Users\\luixb\\OneDrive\\Documentos\\EXAMEN PRACTICO NTT DATA\\ExamenPractico\\src\\app\\helpers\\addtoken.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AddtokenInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\nconst token = localStorage.getItem('token');\n\nif (token) {\n  request = request.clone({ setHeaders: { Authorization: `Bearer ${token}` }});\n}\n\n    return next.handle(request);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}